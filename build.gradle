buildscript {
    ext.kotlin_version = '1.6.10'
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url = "https://storage.googleapis.com/r8-releases/raw" }
    }
    dependencies {
        classpath "io.realm:realm-gradle-plugin:7.0.0"
        classpath 'com.android.tools.build:gradle:7.2.0-beta02'
        classpath 'com.android.tools:r8:3.1.51'
        classpath PROTOBUF_CLASS_PATH
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.16'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.30'
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.8.1'
        classpath 'com.google.firebase:perf-plugin:1.4.1'

    }
}

tasks {
    wrapper {
        gradleVersion = "5.5.1"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "../../../prebuilts/sdk/current/androidx/m2repository" }
        maven { url "../../../prebuilts/fullsdk-darwin/extras/android/m2repository" }
        maven { url "../../../prebuilts/fullsdk-linux/extras/android/m2repository" }
        maven { url 'https://jitpack.io' }
    }

    ext.addFrameworkJar = { String path ->
        def frameworkJar = new File(rootProject.projectDir, 'prebuilts/libs/' + path)
        if (!frameworkJar.exists()) {
            throw new IllegalArgumentException("Framework jar path doesn't exist")
        }
        gradle.projectsEvaluated {
            tasks.withType(JavaCompile) {
                options.bootstrapClasspath = files([frameworkJar] + (options.bootstrapClasspath.files as Iterable<File>))
            }
            tasks.withType(org.jetbrains.kotlin.gradle.internal.KaptWithoutKotlincTask) {
                it.classpath.from(files([frameworkJar] + (it.classpath.files as Iterable<File>)))
            }
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        }
    }
}




Properties localProps = new Properties()
File localPropsFile = project.rootProject.file('local.properties')
if (localPropsFile.exists()) {
    localProps.load(localPropsFile.newDataInputStream())
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.protobuf'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'


def appVersion = 121

android {
    compileSdkVersion 31
    buildToolsVersion '31.0.0'


    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 31

        versionCode appVersion
        versionName "KeyOS v${appVersion}"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        buildConfigField "boolean", "FEATURE_QUINOA", "true"
        buildConfigField "boolean", "FEATURE_SETTINGS_SEARCH", "true"
        buildConfigField "boolean", "DEBUG_STRICT_MODE", "false"
        buildConfigField "boolean", "HAS_LEAKCANARY", "false"
        buildConfigField "boolean", "FEATURE_BUG_REPORTER", "false"
        buildConfigField "boolean", "IS_PLAYSTORE_BUILD", "true"
        buildConfigField "String", "QR_KEY", '"DevAsh@2017"'
        buildConfigField "String", "PRIVACY_POLICY", '"https://www.keyos.in/PrivacyPolicy.html"'
        buildConfigField "String", "TERMS_AND_CONDITIONS", '"https://www.keyos.in/TermsAndCondition.html"'

        ndk { abiFilters "armeabi-v7a", "x86", "x86_64", "arm64-v8a" }
    }
    buildTypes {
        debug {
            minifyEnabled false

            dexOptions {
                matchingFallbacks = ['debug']
            }

            buildConfigField "boolean", "HAS_LEAKCANARY", "false"
        }

        optimized {
            initWith debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.flags'
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.flags'

            dexOptions {
                matchingFallbacks = ['release']
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "default", "custom"

    productFlavors {
        quickstep {
            dimension "default"
            testApplicationId 'tech.DevAsh.keyOS.tests'
            buildConfigField "boolean", "HAS_LEAKCANARY", "false"
            buildConfigField "boolean", "DEBUG_STRICT_MODE", "false"
            buildConfigField "boolean", "FEATURE_BUG_REPORTER", "false"
        }



        keyOS {
            applicationId 'tech.DevAsh.keyOS'
            dimension "custom"
            buildConfigField "boolean", "IS_PLAYSTORE_BUILD", "true"
            buildConfigField "boolean", "IS_DEV_BUILD", "false"
            resValue "string", "launcher_name", "KeyOS"
        }


        pro {
            versionName  "KeyOS v${appVersion} pro"
            dimension "custom"
            applicationId 'tech.DevAsh.keyOS.pro'
            buildConfigField "boolean", "IS_PLAYSTORE_BUILD", "false"
            buildConfigField "boolean", "IS_DEV_BUILD", "false"
            resValue "string", "launcher_name", "KeyOS"

        }

        dev {
            versionName "KeyOS v${appVersion} dev"
            dimension "custom"
            applicationId 'tech.DevAsh.keyOS.dev'
            buildConfigField "boolean", "IS_PLAYSTORE_BUILD", "true"
            buildConfigField "boolean", "IS_DEV_BUILD", "true"
            resValue "string", "launcher_name", "KeyOS"
        }

    }


    sourceSets {
        main {
            res.srcDirs = ['res']
            java.srcDirs = ['src','src_plugins']
            aidl.srcDirs = ['src']
            assets.srcDirs = ['assets']
            manifest.srcFile 'AndroidManifest-common.xml'
            proto {
                srcDir 'protos/'
                srcDir 'proto_overrides/'
                srcDir 'proto_pixel/'
                srcDir 'quickstep/protos_overrides/'
            }

        }

        debug {
            manifest.srcFile "AndroidManifest.xml"
        }

        optimized {
            manifest.srcFile "AndroidManifest.xml"
        }

        release {
            manifest.srcFile "AndroidManifest.xml"
        }

        androidTest {
            res.srcDirs = ['tests/res']
            java.srcDirs = ['tests/src']
            manifest.srcFile "tests/AndroidManifest-common.xml"
        }

        androidTestDebug {
            manifest.srcFile "tests/AndroidManifest.xml"
        }

        quickstep {
            res.srcDirs = ['quickstep/res']
            java.srcDirs = ['src_flags', 'quickstep/src']
            manifest.srcFile "quickstep/AndroidManifest.xml"
        }

        keyOS {
            res.srcDirs = ['keyOS/res','general/res']
//            aidl.srcDirs = ['keyOS/aidl']
            java.srcDirs = ['src_flags', 'src_shortcuts_overrides','keyOS/src']
            manifest.srcFile "keyOS/AndroidManifest.xml"
        }

        pro {
            res.srcDirs = ['keyOS/res','pro/res']
            java.srcDirs = ['keyOS/src']
            manifest.srcFile "pro/AndroidManifest.xml"
        }

        dev {
            res.srcDirs = ['keyOS/res','dev/res']
            java.srcDirs = ['keyOS/src']
            manifest.srcFile "dev/AndroidManifest.xml"
        }



    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs.add('-Xbootclasspath/p:keyOS/libs/framework.jar')
        }
    }

    addFrameworkJar('framework-12.jar')

}



dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.github.florent37:fiftyshadesof:1.0.0'
    implementation 'com.google.protobuf.nano:protobuf-javanano:3.2.0rc2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.github.LawnchairLauncher:hoko-lite:4e0d797'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.github.topjohnwu.libsu:core:3.1.2'
    implementation 'eu.chainfire:librootjava:1.3.0'
    implementation 'me.mvdw.recyclerviewmergeadapter:recyclerviewmergeadapter:2.1.0'
    implementation 'me.xdrop:fuzzywuzzy:1.4.0'
    quickstepImplementation project(':SystemUIShared')
    keyOSImplementation files('keyOS/libs/sesame-lib.aar')
    proImplementation files('keyOS/libs/sesame-lib.aar')
    devImplementation files('keyOS/libs/sesame-lib.aar')

//    for keyos

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.agrawalsuneet.androidlibs:dotsloader:1.4'
    implementation 'net.igenius:customcheckbox:1.3'
    implementation 'com.github.woxthebox:draglistview:1.7.2'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
    implementation 'com.bitvale:switcher:1.1.0'
    implementation 'com.github.takusemba:spotlight:2.0.5'
    implementation 'com.nispok:snackbar:2.11.0'
    implementation 'jp.wasabeef:blurry:4.0.1'
    implementation 'com.afollestad.material-dialogs:core:3.3.0'
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'com.github.clans:fab:1.6.4'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.github.danimahardhika:cafebar:1.3.1'
    implementation 'com.budiyev.android:code-scanner:2.1.0'
    implementation 'androidmads.library.qrgenearator:QRGenearator:1.0.4'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.github.halysongoncalves:pugnotification:1.8.1'
    implementation 'com.agrawalsuneet.androidlibs:fourfoldloader:0.4'
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
    implementation 'com.google.dagger:dagger:2.40.5'
    kapt 'com.google.dagger:dagger-compiler:2.24'
    implementation  'com.google.android.play:core:1.10.3'
    implementation platform('com.google.firebase:firebase-bom:26.1.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'
    implementation "androidx.browser:browser:1.4.0"
    implementation 'com.google.protobuf:protobuf-javalite:3.11.0'

//    implementation ('com.github.nkzawa:socket.io-client:0.6.0'){
//        // excluding org.json which is provided by Android
//        exclude group: 'org.json', module: 'json'
//    }
    implementation 'cat.ereza:customactivityoncrash:2.3.0'
    implementation 'com.razorpay:checkout:1.6.16'


    implementation project(':iconloaderlib')
    implementation project(':searchuilib')
    implementation fileTree(dir: "prebuilts/libs", include: 'sysui_statslog.jar')
    implementation fileTree(dir: "prebuilts/libs", include: 'wm_shell-aidls.jar')

}

protobuf {
    // Configure the protoc executable
    protoc {
        artifact = "com.google.protobuf:protoc:3.18.0"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
                java {
                    option "lite"
                }
            }
        }
    }
}

